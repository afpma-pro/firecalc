#
# SPDX-License-Identifier: AGPL-3.0-or-later
# Copyright (C) 2025 Association Française du Poêle Maçonné Artisanal
#

# =============================================================================
# FireCalc Custom Nginx Proxy Configuration
# =============================================================================
# This configuration handles TWO domains in a single nginx-ssl-proxy instance:
# - UI_DOMAIN: Proxies to ui-server for static files
# - API_DOMAIN: Proxies to backend for API requests
# =============================================================================

# Upstream for UI static files
upstream ui_upstream {
    server ui-server:80;
}

# Upstream for API backend
upstream api_upstream {
    server backend:8181;
}

# =============================================================================
# Server Block: UI Domain (HTTPS)
# =============================================================================
server {
    listen 443 ssl http2;
    server_name ${UI_DOMAIN};

    ssl_certificate /etc/letsencrypt/fullchain-copy.pem;
    ssl_certificate_key /etc/letsencrypt/privkey-copy.pem;

    # SSL configuration
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/fullchain-copy.pem;
    resolver 8.8.8.8 208.67.222.222 valid=300s;
    resolver_timeout 5s;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;
    ssl_dhparam /etc/nginx/dhparams.pem;

    # Let's Encrypt challenge location
    location /.well-known/acme-challenge {
        default_type "text/plain";
        root /usr/share/nginx/html;
        try_files $uri =404;
    }

    # Proxy to UI server
    location / {
        proxy_pass http://ui_upstream;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

# =============================================================================
# Server Block: API Domain (HTTPS)
# =============================================================================
server {
    listen 443 ssl http2;
    server_name ${API_DOMAIN};

    ssl_certificate /etc/letsencrypt/fullchain-copy.pem;
    ssl_certificate_key /etc/letsencrypt/privkey-copy.pem;

    # SSL configuration
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/fullchain-copy.pem;
    resolver 8.8.8.8 208.67.222.222 valid=300s;
    resolver_timeout 5s;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;
    ssl_dhparam /etc/nginx/dhparams.pem;

    # Let's Encrypt challenge location
    location /.well-known/acme-challenge {
        default_type "text/plain";
        root /usr/share/nginx/html;
        try_files $uri =404;
    }

    # API-specific security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'none'; frame-ancestors 'none';" always;

    # Proxy to backend
    location / {
        proxy_pass http://api_upstream;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;

        # Don't cache API responses
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
    }
}

# =============================================================================
# HTTP to HTTPS Redirects
# =============================================================================
server {
    listen 80;
    server_name ${UI_DOMAIN} ${API_DOMAIN};

    # Let's Encrypt challenge location (HTTP)
    location /.well-known/acme-challenge {
        default_type "text/plain";
        root /usr/share/nginx/html;
        try_files $uri =404;
    }

    # Redirect everything else to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}